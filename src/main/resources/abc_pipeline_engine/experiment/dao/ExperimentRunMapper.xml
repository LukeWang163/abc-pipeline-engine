<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="abc_pipeline_engine.experiment.dao.ExperimentRunMapper">
	<resultMap type="abc_pipeline_engine.experiment.data.ExperimentRun" id="runMap">
		<id property="id" column="run_id" />
		<result property="status" column="run_status" />
		<result property="info" column="run_info"/>
		<result property="expId" column="exp_id" />
		<result property="graph" column="exp_graph" />
		<result property="appPath" column="app_path"/>
		<result property="jobId" column="job_id"/>
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
	</resultMap>
	
	<select id="getOne" parameterType="string" resultMap="runMap">
	SELECT
	  run_id,
	  run_status,
	  run_info,
	  exp_id,
	  exp_graph,
	  app_path,
	  job_id,
	  start_time,
	  end_time
	FROM
	  dsw_exp_run
	WHERE
	  run_id = #{_parameter}
	</select>
	
	<select id="queryByParam" parameterType="map" resultMap="runMap">
	SELECT
	  run_id,
	  run_status,
	  run_info,
	  exp_id,
	  exp_graph,
	  app_path,
	  job_id,
	  start_time,
	  end_time
	FROM
	  dsw_exp_run
	  <where>
	    <if test="expId != null and expId !='' ">
	   	AND exp_id = #{expId}
	    </if>
	    <if test="jobId !=null and jobId !=''">
	    AND extern_id=#{externId}
	    </if>
	    <if test="status !=null and status !='' ">
	    AND run_status=#{status}
	    </if>
	  </where>
	  <choose>
	    <when test="orderfield != null and orderfield != ''">
	    ORDER BY ${orderfield} 
	      <choose>
	        <when test="orderdir != null and order != ''">
	        ${orderdir}
	        </when>
	        <otherwise>DESC</otherwise>
	      </choose>
	    </when>
	    <otherwise>
	    ORDER BY start_time DESC
	    </otherwise>
	  </choose>
	</select>
	
	<insert id="save" parameterType="abc_pipeline_engine.experiment.data.ExperimentRun">
	INSERT 
	INTO
	  dsw_exp_run
	(
	  run_id,
	  run_status,
	  run_info,
	  exp_id,
	  exp_graph,
	  app_path,
	  job_id,
	  start_time,
	  end_time
	) VALUES (
	  #{id},
	  #{status},
	  #{info},
	  #{expId},
	  #{graph},
	  #{appPath},
	  #{jobId},
	  #{startTime},
	  #{endTime}
	)
	</insert>
	
	<delete id="remove" parameterType="string">
	DELETE 
	FROM 
	  dsw_exp_run
	WHERE 
	  run_id = #{_parameter}
	</delete>
	
	<update id="update" parameterType="abc_pipeline_engine.experiment.data.ExperimentRun">
	UPDATE
	  dsw_exp_run
	  <set>
	    <if test="status != null">
	    run_status = #{status},
	    </if>
	    <if test="info !=null">
	    run_info=#{info},
	    </if>
	    <if test="endTime != null">
	    end_time = #{endTime},
	    </if>
	  </set>
	  WHERE
	    run_id = #{id}
	</update>
</mapper>